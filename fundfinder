from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
import time

# Set up the WebDriver
driver = webdriver.Chrome(executable_path='C:\\Users\\jmes9\\Downloads\\chrome-win32\\chrome-win32\\chrome.exe')
driver.get("https://www.fundfinder.live/")
time.sleep(2)  # Ensure the page has loaded

# Prepare to store data
investors_data = []

# Find all investor links that trigger popovers
investor_links = driver.find_elements(By.CLASS_NAME, 'css-1t72avv')

# Loop through each link to access each investor's popover
for link in investor_links:
    # Click on the investor link to open the popover
    webdriver.ActionChains(driver).move_to_element(link).click(link).perform()
    time.sleep(1)  # Wait for the popover to become visible

    # Ensure popover is visible and fetch its content
    try:
        # Wait until the popover content is visible; adjust the selector as needed
        popover_content = WebDriverWait(driver, 10).until(
            EC.visibility_of_element_located((By.CLASS_NAME, 'popover-content-class'))  # Update with actual class name
        )
        text_content = popover_content.text  # Get the text content of the popover

        # Append the content to your data list
        investors_data.append({
            "Investor Name": link.text.strip(),
            "Details": text_content
        })

    except Exception as e:
        print(f"Error fetching popover content for {link.text}: {e}")
        continue  # Skip to the next link in case of an error

    # Optionally, close the popover if necessary
    # If clicking away works, you might do:
    # driver.find_element(By.TAG_NAME, 'body').click()

# Convert the data list into a DataFrame
df = pd.DataFrame(investors_data)
df.to_excel('investor_details.xlsx', index=False)

# Clean up
driver.quit()
